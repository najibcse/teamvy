@model IEnumerable<PMTool.Models.Task>

@{
    if (ViewBag.CurrentProject != null)
    {
        PMTool.Models.Project projetc = (PMTool.Models.Project)ViewBag.CurrentProject;
        ViewBag.Title = projetc.Name + " | Kanban Board";
    }
}




<div class="pagetitle">
    <h1>@(((PMTool.Models.Project)ViewBag.CurrentProject).Name) Kanban Board</h1>
    <span>@(((PMTool.Models.Project)ViewBag.CurrentProject).Name)  Kanban Board....</span>
</div>

<br />
<br />
<script type="text/javascript">
    jQuery(document).ready(function () {
        jQuery('.dragbox')
        .each(function () {
            jQuery(this).hover(function () {
                //jQuery(this).find('h2').addClass('collapse');
            }, function () {
                //jQuery(this).find('h2').removeClass('collapse');
            })
            .find('h2').hover(function () {
                //jQuery(this).find('.configure').css('visibility', 'visible');
            }, function () {
                //jQuery(this).find('.configure').css('visibility', 'hidden');
            })
            .click(function () {
                jQuery(this).siblings('.dragbox-content').toggle();
            })
            .end()
            .find('.configure').css('visibility', 'hidden');
        });
        jQuery('.column').sortable({
            connectWith: '.column',
            handle: 'h2',
            cursor: 'move',
            placeholder: 'placeholder',
            forcePlaceholderSize: true,
            opacity: 1,
            delay: 300,
            stop: function (event, ui) {
                jQuery(ui.item).find('h2').click();
                var sortorder = '';
                jQuery('.dragbox').draggable({
                    connectToSortable: '.column',
                    cursor: 'move'
                });
            }
        })
        .disableSelection();
        var isfailed = true;
        jQuery('.column').droppable({
            // Drop should only fire when a draggable element is dropped into the sortables,
            // and NOT when the sortables themselves are sorted (without something being dragged into).
            drop: function (ev, ui) {
                
                var task = ui.draggable[0].id;
                if (task == '') {
                    task = ui.helper[0].id;
                }
                var status = jQuery(this).attr('id');
                if (typeof (status) != 'undefined' && status != null && typeof (task) != 'undefined' && task != null) {
                    UpdateRecord(task, status);
                }
                else {
                    isfailed = false;
                }
                //jQuery.jGrowl('somethig is wrong', { life: 5000 });
                setTimeout((function () {
                    jQuery(this).draggable("destroy");
                }).bind(ui.draggable), 500);
            },
            accept: function() {
                return isfailed;
        }
        })
    });
    function UpdateRecord(task, status) {
        jQuery.ajax({
            url: '@Url.Action("Kanban", "Tasks")',
            data: { taskid: task, statusid: status },
            type: 'POST',
            success: function (data) {
                var msg = new String(data);
                if (msg.startsWith("T"))
                jQuery.jGrowl(data, { life: 5000 });
            },
            error: function (xhr, textStatus, errorThrown) {
                alert(xhr.responseText);
                //jQuery.jGrowl('somethig is wrong', { life: 5000 });
            }
        });
    }
</script>


<div style="background-color: #f7de55">

    @foreach (var status in (List<PMTool.Models.EnumCollection.TaskStatus>)ViewBag.AllStatus)
    {
        <fieldset class='column' id='@Convert.ToInt32(status)'>

            <legend class="widgettitle ctitle">@Convert.ToString(status).Replace("_", " ")</legend>
            @foreach (var item in Model)
            {
                if (Convert.ToInt32(status) == Convert.ToInt32(item.Status))
                {
                <div class="dragbox" id="@item.TaskID" >
                    <h2>@item.Title</h2>
                    <div class="dragbox-content" style="display: none;">
                        @item.Description
                        <a id="showdata" onclick="return ShowForm(@item.TaskID)">Edit </a>
                    </div>
                </div>
                }
            }
        </fieldset>
    }
</div>
<hr style="clear: both;" />

<div id='Modalpopup' class='modal hide fade in' data-url='@Url.Action("EditFromKanban", "Tasks")'>
    <div id='popupcontainer'>
    </div>
</div>
<script type="text/javascript">

    function ShowForm(id) {
        var url = jQuery('#Modalpopup').data('url')+"/"+id;

        jQuery.ajax({
            url: url,
            cache: false,
            success: function (data) {
                jQuery('#popupcontainer').html(data);
                jQuery("#Modalpopup").modal('show');
            }
        });
        return false;
    }
</script>
